// src/components/GroupMembers.tsx
import { useEffect, useState } from 'react';
import WebApp from '@twa-dev/sdk';
import type { Group } from '../api';
import {
  getGroupMembers,
  createGroupInvite,
  removeGroupMember,
  leaveGroup,
  type GroupMember,
} from '../api';

type Props = {
  group: Group;
  chatId: string;
  isOwner: boolean;
  onChanged?: () => void;           // –¥–µ—Ä–Ω—É—Ç—å, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è–ª–∏ (–ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏)
  onLeftGroup?: () => void;         // –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã
};

export default function GroupMembers({ group, chatId, isOwner, onChanged, onLeftGroup }: Props) {
  const [loading, setLoading] = useState(true);
  const [members, setMembers] = useState<GroupMember[]>([]);
  const [owner, setOwner] = useState<GroupMember | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [busy, setBusy] = useState(false);

  const reload = async () => {
    setLoading(true);
    try {
      const r = await getGroupMembers(group.id);
      if (!r.ok) throw new Error('load_error');
      setOwner(r.owner || null);
      setMembers(r.members || []);
      setError(null);
    } catch (e: any) {
      setError(e?.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    reload();
  }, [group.id]);

  const handleInvite = async () => {
    try {
      setBusy(true);
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–≤–∞–π—Ç –≤ –≥—Ä—É–ø–ø—É: backend –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å link/shareText (–∫–∞–∫ –¥–ª—è –∑–∞–¥–∞—á)
      const r = await createGroupInvite({ chatId, groupId: group.id });
      if (!r?.ok || !r?.link) throw new Error('invite_error');

      const text =
        r.shareText ||
        `–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –≤ –≥—Ä—É–ø–ø—É ¬´${group.title}¬ª. –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å.`;
      const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(r.link)}&text=${encodeURIComponent(text)}`;

      WebApp?.openTelegramLink?.(shareUrl);

      WebApp?.HapticFeedback?.notificationOccurred?.('success');
    } catch (e) {
      console.error('[GROUP INVITE] error', e);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ');
      WebApp?.HapticFeedback?.notificationOccurred?.('error');
    } finally {
      setBusy(false);
    }
  };

  const handleRemove = async (member: GroupMember) => {
    if (!isOwner) return;
    if (String(member.chatId) === String(owner?.chatId)) return; // –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å
    // –¥–≤–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∫–∞–∫ –ø—Ä–æ—Å–∏–ª
    if (!confirm(`–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ¬´${member.name || member.chatId}¬ª –∏–∑ –≥—Ä—É–ø–ø—ã?`)) return;
    if (!confirm('–í–Ω–∏–º–∞–Ω–∏–µ: –≤—Å–µ –∑–∞–¥–∞—á–∏ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –≥—Ä—É–ø–ø–µ –ø–µ—Ä–µ–π–¥—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) return;

    try {
      setBusy(true);
   const r = await removeGroupMember(group.id, String(member.chatId), chatId);

      if (!r.ok) throw new Error('remove_error');
      WebApp?.HapticFeedback?.notificationOccurred?.('success');
      await reload();
      onChanged?.();
    } catch (e) {
      console.error('[GROUP REMOVE MEMBER] error', e);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞');
      WebApp?.HapticFeedback?.notificationOccurred?.('error');
    } finally {
      setBusy(false);
    }
  };

  const handleLeave = async () => {
    if (isOwner) return; // –≤–ª–∞–¥–µ–ª–µ—Ü –Ω–µ –º–æ–∂–µ—Ç ¬´–≤—ã–π—Ç–∏¬ª, —Ç–æ–ª—å–∫–æ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É
    if (!confirm('–í—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã? –í—Å–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –≤–∞—Å –ø–µ—Ä–µ–π–¥—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É.')) return;

    try {
      setBusy(true);
      const r = await leaveGroup(group.id, chatId);
      if (!r.ok) throw new Error('leave_error');
      WebApp?.HapticFeedback?.notificationOccurred?.('success');
      onLeftGroup?.();   // —Ä–æ–¥–∏—Ç–µ–ª—å —Å–±—Ä–æ—Å–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
    } catch (e) {
      console.error('[GROUP LEAVE] error', e);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã');
      WebApp?.HapticFeedback?.notificationOccurred?.('error');
    } finally {
      setBusy(false);
    }
  };

  const meIsOwner = isOwner;

  return (
    <div
      style={{
        padding: 16,
        background: '#1b2030',
        border: '1px solid #2a3346',
        borderRadius: 16,
        minHeight: 240,
      }}
    >
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 12 }}>
        <div style={{ fontSize: 16, fontWeight: 600 }}>–£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã</div>
        {meIsOwner ? (
          <button
            onClick={handleInvite}
            disabled={busy}
            style={{
              padding: '8px 12px',
              borderRadius: 10,
              border: '1px solid #2a3346',
              background: '#202840',
              color: '#e8eaed',
              cursor: busy ? 'default' : 'pointer',
            }}
          >
            –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
          </button>
        ) : null}
      </div>

      {loading ? <div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div> : null}
      {error ? <div style={{ color: 'crimson', marginBottom: 12 }}>{error}</div> : null}

      {/* –í–ª–∞–¥–µ–ª–µ—Ü */}
      {owner ? (
        <div
          style={{
            padding: 12,
            borderRadius: 12,
            border: '1px solid #2a3346',
            background: '#121722',
            marginBottom: 12,
          }}
        >
          <div style={{ fontSize: 12, opacity: 0.75, marginBottom: 4 }}>–í–ª–∞–¥–µ–ª–µ—Ü</div>
          <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
            <span>üëë</span>
            <div style={{ fontWeight: 600 }}>{owner.name || owner.chatId}</div>
          </div>
        </div>
      ) : null}

      {/* –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ */}
      <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>
        {members.length === 0 ? (
          <div style={{ opacity: 0.7 }}>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.</div>
        ) : (
          members.map((m) => {
            const isOwnerRow = String(m.chatId) === String(owner?.chatId);
            const isMe = String(m.chatId) === String(chatId);
            return (
              <div
                key={String(m.chatId)}
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'space-between',
                  gap: 8,
                  padding: 12,
                  borderRadius: 12,
                  border: '1px solid #2a3346',
                  background: '#0f141f',
                }}
              >
                <div style={{ display: 'flex', alignItems: 'center', gap: 10 }}>
                  <span>{isOwnerRow ? 'üëë' : 'üë§'}</span>
                  <div>
                    <div style={{ fontWeight: 600 }}>
                      {m.name || m.chatId} {isMe ? <span style={{ opacity: 0.6, fontWeight: 400 }}>(—ç—Ç–æ –≤—ã)</span> : null}
                    </div>
                    {m.assignedCount != null ? (
                      <div style={{ fontSize: 12, opacity: 0.75 }}>
                        –ó–∞–¥–∞—á –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–µ: {m.assignedCount}
                      </div>
                    ) : null}
                  </div>
                </div>

                {/* ‚úèÔ∏è —Ç–æ–ª—å–∫–æ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ —Ç–æ–ª—å–∫–æ –Ω–µ-–≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å */}
                {meIsOwner && !isOwnerRow ? (
                  <button
                    onClick={() => handleRemove(m)}
                    title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–∑–∞–¥–∞—á–∏ –ø–µ—Ä–µ–π–¥—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É)"
                    style={{
                      background: 'transparent',
                      border: 'none',
                      color: '#8aa0ff',
                      cursor: 'pointer',
                      fontSize: 16,
                      padding: 2,
                      lineHeight: 1,
                    }}
                  >
                    ‚úèÔ∏è
                  </button>
                ) : null}
              </div>
            );
          })
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ ¬´–≤—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã¬ª ‚Äî —Ç–æ–ª—å–∫–æ –Ω–µ –≤–ª–∞–¥–µ–ª—å—Ü—É */}
      {!meIsOwner ? (
        <div style={{ marginTop: 16 }}>
          <button
            onClick={handleLeave}
            disabled={busy}
            style={{
              padding: '10px 14px',
              borderRadius: 12,
              border: '1px solid #472a2a',
              background: '#3a1f1f',
              color: '#ffd7d7',
              cursor: busy ? 'default' : 'pointer',
              width: '100%',
            }}
          >
            –í—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã
          </button>
        </div>
      ) : null}
    </div>
  );
}
